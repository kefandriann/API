openapi: 3.0.3
info:
  title: API_TD1
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/HEIKEPHAS/Student_management/1.0.0
  - url: https://student-management.com
paths:
  /groups:
    get:
      tags:
        - Group
      parameters:
        - name: groupId
          in: query
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        200:
          description: List of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
    post:
      tags:
        - Group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        201:
          description: Group added successfully
    put:
      tags:
        - Group
      parameters:
        - name: groupId
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        200:
          description: Group updated successfully
    delete:
      tags:
        - Group
      parameters:
        - name: groupId
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Group deleted successfully
  /students:
    get:
      tags:
        - Student
      parameters:
        - name: studentName
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      tags:
        - Student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        201:
          description: Student added successfully
    put:
      tags:
        - Student
      parameters:
        - name: studentId
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        200:
          description: Student updated successfully
    delete:
      tags:
        - Student
      parameters:
        - name: studentId
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: Student deleted successfully
  /students/{studentId}/group:
    put:
      parameters:
        - name: studentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        200:
          description: Student updated successfuly
  /students/group:
    put:
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/Group'
                - type: array
                  items:
                    type: string
      responses:
        200:
          description: Students updated successfully
  /students/{studentId}/groups/{groupId}:
    put:
      parameters:
        - name: studentId
          in : path
          required: true
          schema:
            type: string
        - name: groupId
          in : path
          required: true
          schema:
            type: string
      responses:
       200:
        description: Student updated successfully
components:
  schemas:
    Group:
      type: object
      properties:
        groupId:
          type: string
        groupName:
          type: string
        groupYear:
          type: string
        studentNb:
          type: integer
        promotion:
          type: string
          enum:
            - G
            - H
            - J
            - K
        students:
          type: array
          items:
            $ref: '#/components/schemas/Student'
    Student:
      type: object
      properties:
        studentId:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
            - M
            - F
        birthdate:
          type: string
          format: date
        reference:
          type: string
        group:
          $ref: "#/components/schemas/Group"
